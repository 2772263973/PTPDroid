<android.telephony.TelephonyManager: java.lang.String getDeviceId()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getLine1Number()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()> -> _SOURCE_
<android.view.MotionEvent: int getDeviceId()> -> _SOURCE_
<android.view.KeyEvent: int getDeviceId()> -> _SOURCE_
<org.springframework.security.config.authentication.CachingUserDetailsService: org.springframework.security.core.userdetails.UserDetails loadUserByUsername(java.lang.String)> -> _SOURCE_
<org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper: org.springframework.security.core.userdetails.UserDetails loadUserDetails(org.springframework.security.core.Authentication)> -> _SOURCE_
<android.location.Address: java.lang.String getAdminArea()> -> _SOURCE_
<android.location.Location: getBearing()> -> _SOURCE_
<android.location.Location: double getLatitude()> -> _SOURCE_
<android.location.Location: double getLongitude()> -> _SOURCE_
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)> -> _SOURCE_
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)> -> _SOURCE_
<android.telephony.gsm.GsmCellLocation: int getCid()> -> _SOURCE_
<android.telephony.gsm.GsmCellLocation: int getLac()> -> _SOURCE_
<android.location.LocationProvider: int getAccuracy()> -> _SOURCE_
<android.view.InputDevice: java.lang.String getDescriptor()> -> _SOURCE_
<android.view.InputDevice: java.lang.String getName()> -> _SOURCE_
<android.hardware.input.InputManager: int[] getInputDeviceIds()> -> _SOURCE_
<android.media.AudioRecord: int read(short[],int,int)> -> _SOURCE_
<android.media.AudioRecord: int read(byte[],int,int)> -> _SOURCE_
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int)> -> _SOURCE_
<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()> -> _SOURCE_
<com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient.Info getAdvertisingIdInfo(android.content.Context)> -> _SOURCE_
<com.google.android.gms.ads.identifier.AdvertisingIdClient.Info: java.lang.String getId()> -> _SOURCE_
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidId(android.content.Context)> -> _SOURCE_
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaReflection(android.content.Context)> -> _SOURCE_
<com.facebook.internal.AttributionIdentifiers: com.facebook.internal.AttributionIdentifiers getAndroidIdViaService(android.content.Context)> -> _SOURCE_
<com.facebook.internal.AttributionIdentifiers: java.lang.String getAndroidAdvertiserId()> -> _SOURCE_
<com.facebook.internal.AttributionIdentifiers: java.lang.String getAdvertiserId()> -> _SOURCE_
<com.facebook.internal.Utility: void setAppEventAttributionParameters(org.json.JSONObject,com.facebook.internal.AttributionIdentifiers,java.lang.String,boolean)> -> _SOURCE_
<com.facebook.internal.AppEventsLoggerUtility: org.json.JSONObject getJSONObjectForGraphAPICall(com.facebook.internal.AppEventsLoggerUtility$GraphAPIActivityType,com.facebook.internal.AttributionIdentifiers,java.lang.String,boolean,android.content.Context)> -> _SOURCE_

<android.content.pm.PackageManager: java.util.List getInstalledApplications(int)> -> _SOURCE_

<android.webkit.BrowserFrame: java.lang.String getUserAgentString()> -> _SOURCE_

<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List getInstalledApplications(int)> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int)> -> _SOURCE_
<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int,int)> -> _SOURCE_

<android.telephony.SmsMessage: java.lang.String getMessageBody()> -> _SOURCE_
<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()> -> _SOURCE_

<android.os.Handler: android.os.Message obtainMessage()> -> _SOURCE_
<android.os.Handler: android.os.Message obtainMessage(int,int,int)> -> _SOURCE_
<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)> -> _SOURCE_
<android.os.Handler: android.os.Message obtainMessage(int)> -> _SOURCE_
<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)> -> _SOURCE_

<android.accounts.AccountManager: android.accounts.Account[] getAccounts()> -> _SOURCE_

<java.util.Calendar: java.util.TimeZone getTimeZone()> -> _SOURCE_


<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: java.lang.String getName()> -> _SOURCE_
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)> -> _SOURCE_
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String,boolean)> -> _SOURCE_
<android.webkit.CookieManager: java.lang.String getCookie(android.net.WebAddress)> -> _SOURCE_
<android.webkit.CookieManagerClassic: java.lang.String getCookie(android.net.WebAddress)> -> _SOURCE_
<android.app.ActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()> _SOURCE_

<android.net.wifi.WifiInfo: java.lang.String getMacAddress()> -> _SOURCE_
<android.net.wifi.WifiInfo: java.lang.String getSSID()> -> _SOURCE_
<android.net.wifi.WifiInfo: java.lang.String getBSSID()> -> _SOURCE_

<android.provider.Browser: android.database.Cursor getAllBookmarks()> -> _SOURCE_

<android.view.textservice.SuggestionsInfo: int getCookie()> -> _SOURCE_
<android.view.textservice.TextInfo: int getCookie()> -> _SOURCE_
<org.apache.http.impl.client.BasicCookieStore: java.util.List getCookies()> -> _SOURCE_


<android.provider.Browser: android.database.Cursor getAllVisitedUrls()> -> _SOURCE_

<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_
<android.database.Cursor: java.lang.String getString(int)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_

<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()> -> _SOURCE_
<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()> -> _SOURCE_

<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.Class)> -> _SINK_
<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)> -> _SINK_
<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)> -> _SINK_

<java.net.URLConnection: void connect()> -> _SINK_
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)> -> _SINK_
<java.net.URLConnection: java.io.OutputStream getOutputStream()> -> _SINK_

<java.net.URLConnection: java.io.InputStream getInputStream()> -> _BOTH_
<java.net.URL: java.io.InputStream openStream()> -> _BOTH_
<java.net.URL: java.lang.Object getContent()> -> _BOTH_
<java.net.URL: java.lang.Object getContent(java.lang.Class[])> -> _BOTH_

<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)> -> _SINK_
<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _SINK_

<java.io.OutputStream: void write(byte[])> -> _SINK_
<java.io.OutputStream: void write(byte[],int,int)> -> _SINK_
<java.io.OutputStream: void write(int)> -> _SINK_

<java.io.FileOutputStream: void write(byte[])> -> _SINK_
<java.io.FileOutputStream: void write(byte[],int,int)> -> _SINK_
<java.io.FileOutputStream: void write(int)> -> _SINK_

<java.io.Writer: void write(char[])> -> _SINK_
<java.io.Writer: void write(char[],int,int)> -> _SINK_
<java.io.Writer: void write(int)> -> _SINK_
<java.io.Writer: void write(java.lang.String)> -> _SINK_
<java.io.Writer: void write(java.lang.String,int,int)> -> _SINK_
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)> -> _SINK_

<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)> -> _SINK_
<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)> -> _SINK_

<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()> -> _SINK_
<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)> -> _SINK_
<okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)> -> _SINK_
<retrofit2.Call: retrofit2.Response execute()> -> _SINK_
<retrofit2.Call: void enqueue(retrofit2.Callback)> -> _SINK_
<retrofit2.Response: java.lang.Object body()> -> _SINK_

<android.os.Bundle: void putBinder(java.lang.String,android.os.IBinder)> -> _SINK_
<android.os.Bundle: void putBoolean(java.lang.String,boolean)> -> _SINK_
<android.os.Bundle: void putBooleanArray(java.lang.String,boolean[])> -> _SINK_
<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)> -> _SINK_
<android.os.Bundle: void putByte(java.lang.String,byte)> -> _SINK_
<android.os.Bundle: void putByteArray(java.lang.String,byte[])> -> _SINK_
<android.os.Bundle: void putChar(java.lang.String,char)> -> _SINK_
<android.os.Bundle: void putCharArray(java.lang.String,char[])> -> _SINK_
<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)> -> _SINK_
<android.os.Bundle: void putCharSequenceArray(java.lang.String,java.lang.CharSequence[])> -> _SINK_
<android.os.Bundle: void putCharSequenceArrayList(java.lang.String,java.util.ArrayList)> -> _SINK_
<android.os.Bundle: void putDouble(java.lang.String,double)> -> _SINK_
<android.os.Bundle: void putDoubleArray(java.lang.String,double[])> -> _SINK_
<android.os.Bundle: void putFloat(java.lang.String,float)> -> _SINK_
<android.os.Bundle: void putFloatArray(java.lang.String,float[])> -> _SINK_
<android.os.Bundle: void putInt(java.lang.String,int)> -> _SINK_
<android.os.Bundle: void putIntArray(java.lang.String,int[])> -> _SINK_
<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)> -> _SINK_
<android.os.Bundle: void putLong(java.lang.String,long)> -> _SINK_
<android.os.Bundle: void putLongArray(java.lang.String,long[])> -> _SINK_
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)> -> _SINK_
<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])> -> _SINK_
<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)> -> _SINK_
<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)> -> _SINK_
<android.os.Bundle: void putShort(java.lang.String,short)> -> _SINK_
<android.os.Bundle: void putShortArray(java.lang.String,short[])> -> _SINK_
<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)> -> _SINK_
<android.os.Bundle: void putString(java.lang.String,java.lang.String)> -> _SINK_
<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])> -> _SINK_
<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)> -> _SINK_
<android.os.Bundle: void putAll(android.os.Bundle)> -> _SINK_

<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> android.permission.SEND_SMS -> _SINK_ 
<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)> android.permission.SEND_SMS -> _SINK_ 
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)> android.permission.SEND_SMS -> _SINK_ 
<java.net.Socket: void connect(java.net.SocketAddress)> -> _SINK_
<android.os.Handler: boolean sendMessage(android.os.Message)> -> _SINK_

<android.util.Log: int d(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int e(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int i(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int v(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int w(java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int w(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int wtf(java.lang.String,java.lang.Throwable)> -> _SINK_
<android.util.Log: int wtf(java.lang.String,java.lang.String)> -> _SINK_
<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_

<android.os.SystemProperties: long getLong(java.lang.String,long)> -> _SOURCE_
<android.os.SystemProperties: int getInt(java.lang.String,int)> -> _SOURCE_
<android.os.SystemProperties: java.lang.String get(java.lang.String)> -> _SOURCE_
<android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)> -> _SOURCE_


